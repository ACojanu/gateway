#
# Copyright (c) 2007-2014 Kaazing Corporation. All rights reserved.
# 
# Licensed to the Apache Software Foundation (ASF) under one
# or more contributor license agreements.  See the NOTICE file
# distributed with this work for additional information
# regarding copyright ownership.  The ASF licenses this file
# to you under the Apache License, Version 2.0 (the
# "License"); you may not use this file except in compliance
# with the License.  You may obtain a copy of the License at
# 
#   http://www.apache.org/licenses/LICENSE-2.0
# 
# Unless required by applicable law or agreed to in writing,
# software distributed under the License is distributed on an
# "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
# KIND, either express or implied.  See the License for the
# specific language governing permissions and limitations
# under the License.
#

connect tcp://127.0.0.1:8001
connected

# Connection request
write "GET /echo?.kl=Y HTTP/1.1\r\n"
write "Upgrade: websocket\r\n"
write "Connection: Upgrade\r\n"
write "Host: localhost:8001\r\n"
write "Origin: http://localhost:8001\r\n"
write "Sec-WebSocket-Key: nDaimG37f4nUqogPypithw==\r\n"
write "Sec-WebSocket-Version: 13\r\n"
write "Sec-WebSocket-Extensions: x-kaazing-ping-pong\r\n"
write "\r\n"

# 101 Response

read "HTTP/1.1 101 Web Socket Protocol Handshake\r\n"
read "Connection: Upgrade\r\n"
read /Date: .*/ "\r\n"
read /Sec-WebSocket-Accept: .*/ "\r\n"
# The 4 control bytes for ping-pong extension are 0x00000002:
read "Sec-WebSocket-Extensions: x-kaazing-ping-pong; 01010102"
read "\r\n"
read "Server: Kaazing Gateway\r\n"
read "Upgrade: websocket\r\n"
read "\r\n"

# binary-encoded balancer directive - NO balance needed      
read [0x82 0x04 0xEF 0x83 0xBF 0x4E]

# Send escape frame (control bytes only, unmasked form is [0x81 0x04 0x01 0x01 0x01 0x02])
write [0x81 0x84 0x01 0x01 0x01 0x01 0x00 0x00 0x00 0x03]

# Send a text message starting with the control bytes (unmasked form is [0x81 0x04 0x01 0x01 0x01 0x02 0x31 0x32 0x33])
write [0x81 0x87 0x01 0x01 0x01 0x01 0x00 0x00 0x00 0x03 0x30 0x33 0x32]

# Expect echoed text message response (preceded by the escape frame)
read [0x81 0x04 0x01 0x01 0x01 0x02]
read [0x81 0x07 0x01 0x01 0x01 0x02 0x31 0x32 0x33]

# Send masked extended PING to make sure we don't erroneously think it's escaped 
# (unmasked form is read [0x81 0x06 0x01 0x01 0x01 0x02 0x09 0x00])
write [0x81 0x86 0x01 0x01 0x01 0x01 0x00 0x00 0x00 0x03 0x08 0x01]

# Expect extended PONG response
read [0x81 0x06 0x01 0x01 0x01 0x02 0x0a 0x00]

# Send text data "AB" to be echoed (to make sure connection is still operating properly)
write [0x81 0x82 0x01 0x01 0x01 0x01 0x40 0x43]
read [0x81 0x02 0x41 0x42]

# Do clean close
write [0x88 0x00]
read [0x88 0x00]

close
closed